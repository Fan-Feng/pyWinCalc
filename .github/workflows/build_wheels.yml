name: Build wheels

on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main, manylinux_wheels ]
  pull_request:
    branches: [ main ]

jobs:
  build_wheels_windows_x86:
    name: Wheels â€¢ ${{ matrix.cibw-arch }}
    runs-on: ${{ matrix.runs-on }}
    matrix:
      python-version: [3.7, 3.8, 3.9, "3.10"]
      include:
        - runs-on: windows-2019
          cibw-arch: win32
          python-arch: x86

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: ${{ matrix.python-arch }}

      - name: Setup CMake
        uses: jwlawson/actions-setup-cmake@v1.12

      - name: Install requirements
        run: |
          python -m pip install cibuildwheel
          
      - name: Configure cibuildwheel
        shell: bash
        run: |
          CMAKE_ARCH="${{ matrix.cibw-arch == 'win32' && '-A Win32' || '' }}"
          echo "CIBW_BUILD=*-${{ matrix.cibw-arch }}" >> $GITHUB_ENV
          echo "CIBW_ENVIRONMENT=$CIBW_ENVIRONMENT_COMMON" >> $GITHUB_ENV

      - name: Run cibuildwheel
        run: cibuildwheel
          
      - name: Upload wheels
        uses: actions/upload-artifact@v2
        with:
          path: wheelhouse/*.whl

          
          
  build_wheels_windows_x64:
    name: Build wheels on ${{ matrix.python-version }} x64 ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-2019]
        python-version: [3.7, 3.8, 3.9, "3.10"]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64

      - name: Install packages
        run: pip install wheel

      - name: build
        run: python setup.py bdist_wheel

      - name: upload wheels
        uses: actions/upload-artifact@v2
        with:
          path: ./dist/*.whl
          
  build_wheels_mac:
    name: Build wheels on ${{ matrix.python-version }} ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-10.15]
        python-version: [3.7, 3.8, 3.9, "3.10"]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install packages
        run: pip install wheel

      - name: build
        run: python setup.py bdist_wheel

      - name: upload wheels
        uses: actions/upload-artifact@v2
        with:
          path: ./dist/*.whl
          
  build_wheels_manylinux:
    name: Build manylinux wheels
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Build manylinux Python wheels
        uses: RalfG/python-wheels-manylinux-build@v0.4.2-manylinux2014_x86_64

      - name: upload wheels
        uses: actions/upload-artifact@v2
        with:
          path: ./dist/*-manylinux*.whl
  
